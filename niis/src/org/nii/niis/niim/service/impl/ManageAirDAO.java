/* Generated by Together */

package org.nii.niis.niim.service.impl;


import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import egovframework.rte.psl.dataaccess.EgovAbstractDAO;

/**
 * 메인 DAO 객체
 */
@Repository("manageAirDAO")
public class ManageAirDAO extends EgovAbstractDAO {
	/**
	 * 통합관리 - 항공사진 관리/항공사진 사업연도 조회
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })	
	public List<?> selectYearListAir() {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectYearListAir");
	}
	/**
	 * 통합관리 - 항공사진 관리/항공사진 사업지구명(연도별) 조회
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })	
	public List<?> selectZoneNamAir(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectZoneNamAir", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/항공사진 코스번호 조회
	 * @param zoneCode
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })	
	public List<?> selectPhCourseAir(String zoneCode) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectPhCourseAir", zoneCode);
	}
	/**
	 * 통합관리 - 항공사진 관리/항공사진 사진번호 조회
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })	
	public List<?> selectPhNumAir(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectPhNumAir", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 보안등급  조회
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })	
	public List<?> selectSecurityCode() {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectSecurityCode");
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 카메라 구분 조회
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public List<?> selectCameraCode() {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectCameraCode");
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 해상도 조회
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public List<?> selectResolutionAir(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectResolutionAir", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 목록 조회 페이징 카운트
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public int selectProductAirListCnt(Map<String, Object> airParam) {
		return (Integer)selectByPk("manageAirDAO.selectProductAirListCnt", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 목록 조회
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public List<?> selectProductAirList(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectProductAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 상세 목록 조회
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public List<?> selectSubProductAirList(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectSubProductAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 상세 목록 조회(외부표정요소)
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public List<?> selectSubProductEOAirList(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectSubProductEOAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 상세 목록 조회(메타데이터)
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public List<?> selectSubMetaAirList(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectSubMetaAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 수정(획득정보)
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public int updateAdjustMetaAirmapAcqut(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustMetaAirmapAcqut", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 수정(제약정보)
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public int updateAdjustMetaAirmapContr(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustMetaAirmapContr", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 수정(축척)
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public int updateAdjustAirZoneDts(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustAirZoneDts", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 수정(메타데이터)
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public int updateAdjustAirBasemetaDts(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustAirBasemetaDts", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 상세 목록 수정(식별정보)
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	@SuppressWarnings({ "deprecation", "unchecked" })
	public int updateAdjustMetaAirmapIdent(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustMetaAirmapIdent", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 수정
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	public int updateAdjustProductAirList(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustProductAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 수정(외부표정요소)
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	public int updateAdjustProductEOAirList(Map<String, Object> airParam) {
		return update("manageAirDAO.updateAdjustProductEOAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 사업지구명 조회
	 * @return List
	 * @throws Exception
	 */
	public List<?> OrientmapZoneNam() {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectOrientmapZoneNam");
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 코스번호 조회
	 * @param zoneCode
	 * @return List
	 * @throws Exception
	 */
	public List<?> OrientmapPhCourse(String zoneCode) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectOrientmapPhCourse", zoneCode);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 사진번호 조회
	 * @param airParam
	 * @return List
	 * @throws Exception
	 */
	public List<?> OrientmapPhNum(Map<String, Object> airParam) {
		return (List<?>) getSqlMapClientTemplate().queryForList("manageAirDAO.selectOrientmapPhNum", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 등록
	 * @param airParam
	 * @return String
	 * @throws Exception
	 */
	public String insertProductAirList(Map<String, Object> airParam) {
		return (String)insert("manageAirDAO.insertProductAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 등록(메타데이터)
	 * @param airParam
	 * @return String
	 * @throws Exception
	 */
	public String insertMetaAirmapContr(Map<String, Object> airParam) {
		return (String)insert("manageAirDAO.insertMetaAirmapContr", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 등록(메타데이터)
	 * @param airParam
	 * @return String
	 * @throws Exception
	 */
	public String insertAirBasemetaDts(Map<String, Object> airParam) {
		return (String)insert("manageAirDAO.insertAirBasemetaDts", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 등록(메타데이터)
	 * @param airParam
	 * @return String
	 * @throws Exception
	 */
	public String insertMetaAirmapIdent(Map<String, Object> airParam) {
		return (String)insert("manageAirDAO.insertMetaAirmapIdent", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 등록(외부표정요소)
	 * @param airParam
	 * @return String
	 * @throws Exception
	 */
	public String insertProductEOAirList(Map<String, Object> airParam) {
		return (String)insert("manageAirDAO.insertProductEOAirList", airParam);
	}
	/**
	 * 통합관리 - 항공사진 관리/해방전후 항공사진 관리 삭제
	 * @param airParam
	 * @return int
	 * @throws Exception
	 */
	public int delProList(Map<String, Object> airParam) {
		return delete("manageAirDAO.delProList", airParam);
	}

	
}